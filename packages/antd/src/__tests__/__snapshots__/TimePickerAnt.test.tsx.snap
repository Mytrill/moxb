// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TimePickerAnt should render a time picker by default 1`] = `
<TimePicker
  align={
    Object {
      "offset": Array [
        0,
        -2,
      ],
    }
  }
  disabled={false}
  focusOnOpen={true}
  hideDisabledOptions={false}
  id="the_id"
  label="oh"
  onChange={[Function]}
  placement="bottomLeft"
  prefixCls="ant-time-picker"
  readOnly={false}
  transitionName="slide-up"
/>
`;

exports[`TimePickerFormAnt should render form item with a time picker by default 1`] = `
<FormItemAnt
  operation={
    bound TimeImpl {
      "_errors": Array [],
      "_isSaving": false,
      "_value": undefined,
      "constructor": [Function],
      "doClearErrors": [Function],
      "doGetValue": [Function],
      "doOnValidate": [Function],
      "doPlaceholder": [Function],
      "doSetValue": [Function],
      "domId": "the_id",
      "getDisabled": [Function],
      "getErrors": [Function],
      "getHelp": [Function],
      "getInitialValue": [Function],
      "getInvisible": [Function],
      "getLabel": [Function],
      "getReadonly": [Function],
      "id": "TheId",
      "impl": Object {
        "disabled": [Function],
        "id": "TheId",
        "label": "oh",
      },
      "setError": [Function],
      Symbol(mobx did run lazy initializers): true,
      Symbol(mobx administration): ObservableObjectAdministration$$1 {
        "defaultEnhancer": [Function],
        "keysAtom": Atom$$1 {
          "diffValue": 0,
          "isBeingObserved": false,
          "isPendingUnobservation": false,
          "lastAccessedBy": 0,
          "lowestObserverState": 2,
          "name": "TimeImpl@33.keys",
          "observers": Set {},
        },
        "name": "TimeImpl@33",
        "target": [Circular],
        "values": Map {
          "_errors" => Array [],
          "label" => "oh",
          "disabled" => false,
          "enabled" => true,
          "invisible" => false,
          "readOnly" => false,
          "help" => undefined,
          "errors" => Array [],
          "error" => undefined,
          "hasErrors" => false,
          "_value" => undefined,
          "_isSaving" => false,
          "inputType" => undefined,
          "value" => undefined,
          "placeholder" => undefined,
          "required" => undefined,
          "isInitialValue" => undefined,
        },
      },
    }
  }
>
  <TimePickerAnt
    disabled={false}
    id="the_id"
    operation={
      bound TimeImpl {
        "_errors": Array [],
        "_isSaving": false,
        "_value": undefined,
        "constructor": [Function],
        "doClearErrors": [Function],
        "doGetValue": [Function],
        "doOnValidate": [Function],
        "doPlaceholder": [Function],
        "doSetValue": [Function],
        "domId": "the_id",
        "getDisabled": [Function],
        "getErrors": [Function],
        "getHelp": [Function],
        "getInitialValue": [Function],
        "getInvisible": [Function],
        "getLabel": [Function],
        "getReadonly": [Function],
        "id": "TheId",
        "impl": Object {
          "disabled": [Function],
          "id": "TheId",
          "label": "oh",
        },
        "setError": [Function],
        Symbol(mobx did run lazy initializers): true,
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "TimeImpl@33.keys",
            "observers": Set {},
          },
          "name": "TimeImpl@33",
          "target": [Circular],
          "values": Map {
            "_errors" => Array [],
            "label" => "oh",
            "disabled" => false,
            "enabled" => true,
            "invisible" => false,
            "readOnly" => false,
            "help" => undefined,
            "errors" => Array [],
            "error" => undefined,
            "hasErrors" => false,
            "_value" => undefined,
            "_isSaving" => false,
            "inputType" => undefined,
            "value" => undefined,
            "placeholder" => undefined,
            "required" => undefined,
            "isInitialValue" => undefined,
          },
        },
      }
    }
    readOnly={false}
  />
</FormItemAnt>
`;
