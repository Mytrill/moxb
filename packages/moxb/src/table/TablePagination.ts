export interface TablePaginationFilterOptions {}

export interface TablePagination {
    /**
     * Called by the UI when the pagination page is changed.
     */
    setActivePage(page: number): void;

    /**
     * Called by the UI when the pagination page is changed.
     */
    setPageSize(pageSize: number): void;

    /**
     * The currently active page number. Starts with 1!
     */
    readonly activePage: number;

    /**
     * The total amount of table entries, needed for the pagination pages calculation
     */
    readonly totalAmount: number;

    /**
     * The total number of pages (given the current page size)
     */
    readonly totalPages: number;

    /**
     * Is there a next page?
     */
    readonly hasNextPage: boolean;
    /**
     * Is there a previous page?
     */
    readonly hasPrevPage: boolean;

    /**
     *  The page size sets the content displayed on one table page
     */
    readonly pageSize: number;

    /**
     * Possible choices for page size
     */
    readonly pageSizes: number[];

    /**
     * Should the pagination control be visible
     */
    readonly visible: boolean;
    /**
     * The filterOptions are generated by the pagination and is used on the query
     */
    readonly filterOptions: TablePaginationFilterOptions;
}
