// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActionFormButtonUi html should match snapshot 1`] = `"<div class=\\"field\\"><button id=\\"action-id\\" class=\\"ui button\\" role=\\"button\\"></button></div>"`;

exports[`ActionFormButtonUi should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ActionFormButtonUi
    operation={
      bound ActionImpl {
        "_errors": Array [],
        "constructor": [Function],
        "doClearErrors": [Function],
        "doOnValidate": [Function],
        "domId": "the_id",
        "getDisabled": [Function],
        "getErrors": [Function],
        "getHelp": [Function],
        "getInvisible": [Function],
        "getLabel": [Function],
        "getReadonly": [Function],
        "id": "TheId",
        "impl": Object {
          "fire": [Function],
          "id": "TheId",
        },
        "setError": [Function],
        Symbol(mobx did run lazy initializers): true,
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "ActionImpl@11.keys",
            "observers": Set {},
          },
          "name": "ActionImpl@11",
          "target": [Circular],
          "values": Map {
            "_errors" => Array [],
            "label" => undefined,
            "disabled" => false,
            "enabled" => true,
            "invisible" => false,
            "readOnly" => false,
            "help" => undefined,
            "errors" => Array [],
          },
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": [Function],
      "children": undefined,
      "color": undefined,
      "control": [Function],
      "disabled": false,
      "id": "the_id",
      "onClick": [Function],
      "readOnly": false,
      "size": undefined,
      "width": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": [Function],
        "children": undefined,
        "color": undefined,
        "control": [Function],
        "disabled": false,
        "id": "the_id",
        "onClick": [Function],
        "readOnly": false,
        "size": undefined,
        "width": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
